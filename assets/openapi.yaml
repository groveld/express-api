---
openapi: 3.0.3

info:
  title: Simple Authentication API
  version: 0.0.1
  description: This is a sample server for a pet store.
  termsOfService: https://www.groveld.com/terms
  contact:
    name: API Support
    email: support@groveld.com
    url: https://www.groveld.com/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:3000
  - url: https://api.groveld.com/v1

tags:
  - name: auth
    description: Everything about authentication
  - name: users
    description: Everything about users
  - name: certificates
    description: Everything about certificates
  - name: root
    description: Everything about root functions

paths:
  /ping:
    get:
      tags:
        - root
      summary: 'Get Server Information'
      operationId: ping
      security: []
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
  /data:
    get:
      tags:
        - root
      summary: Get data
      operationId: getData
      responses:
        '200':
          description: Get data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: string
        '400':
          description: Missing username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/login:
    post:
      tags:
        - auth
      summary: Authenticate user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: username
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - access_token
                  - refresh_token
                properties:
                  message:
                    type: string
                  access_token:
                    type: string
                  refresh_token:
                    type: string
        '400':
          description: Missing username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/refresh:
    post:
      tags:
        - auth
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: username
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - token
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Missing username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/logout:
    post:
      tags:
        - auth
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: username
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - token
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Missing username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    post:
      tags:
        - users
      summary: Create user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: username
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - token
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Missing username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - users
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: username
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - token
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Missing username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{id}:
    get:
      tags:
        - users
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: username
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - token
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Missing username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    ServerInfo:
      type: 'object'
      required:
        - name
        - description
        - version
        - uptime
      properties:
        name:
          type: 'string'
        description:
          type: 'string'
        version:
          type: 'string'
        uptime:
          type: 'number'
    Error:
      type: object
      # required:
      #   - message
      #   - errors
      properties:
        message:
          type: string
        errors:
          type: object
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
